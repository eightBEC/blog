<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>eightBEC&#39;s blog</title>
    <link>https://eightbec.github.io/blog/index.xml</link>
    <description>Recent content on eightBEC&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 22 Dec 2016 23:48:42 +0100</lastBuildDate>
    <atom:link href="https://eightbec.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Cloud-Connected Soil Moisture Sensor Using ESP8266</title>
      <link>https://eightbec.github.io/blog/posts/moisture-sensor/</link>
      <pubDate>Thu, 22 Dec 2016 23:48:42 +0100</pubDate>
      
      <guid>https://eightbec.github.io/blog/posts/moisture-sensor/</guid>
      <description>

&lt;hr /&gt;

&lt;p&gt;Today I&amp;rsquo;ve built a soil moisture sensor connected to the Internet of Things for less than 5â‚¬ using an ESP8266-12E and a cheap moisture sensor.
The idea is to read the moisture value every x hours and put the ESP8266 into deep sleep mode.&lt;/p&gt;

&lt;h2 id=&#34;1-materials&#34;&gt;1.Materials&lt;/h2&gt;

&lt;p&gt;1x &lt;a href=&#34;https://de.aliexpress.com/item/Esp8266-WiFi-series-of-model-ESP-12-ESP-12F-esp12F-esp12-authenticity-guaranteed/32639524010.html?spm=2114.010208.3.75.TaI1vv&amp;amp;ws_ab_test=searchweb0_0,searchweb201602_2_10065_10068_10000009_10084_10083_10080_10082_10081_10060_10061_10062_10056_10055_10037_10054_10059_10032_10099_10078_10079_10077_427_426_10103_10073_10102_10101_10096_10052_10050_10107_10106_10051,searchweb201603_3,afswitch_5&amp;amp;btsid=12d312ef-b28e-4e41-ac0a-ff39da0a68a1&#34;&gt;ESP8266-12E&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1x &lt;a href=&#34;https://de.aliexpress.com/item/Serial-WIFI-ESP8266-module-adapter-plate-Full-IO-port-leads-you-can-choose-the-ESP-07/32380914509.html?spm=2114.010208.3.1.Am64ZS&amp;amp;ws_ab_test=searchweb0_0,searchweb201602_2_10065_10068_10000009_10084_10083_10080_10082_10081_10060_10061_10062_10056_10055_10037_10054_10059_10032_10099_10078_10079_10077_427_426_10103_10073_10102_10101_10096_10052_10050_10107_10106_10051,searchweb201603_3,afswitch_5&amp;amp;btsid=12d312ef-b28e-4e41-ac0a-ff39da0a68a1&#34;&gt;ESP8266-12E Break-Out Board&lt;/a&gt; (optional)&lt;/p&gt;

&lt;p&gt;1x &lt;a href=&#34;https://de.aliexpress.com/item/5PCS-LOT-FREE-SHIPPING-Soil-moisture-meter-testing-module-soil-humidity-sensor-robot-intelligent-car-for/1625352348.html?spm=2114.010208.8.53.K1kpov&#34;&gt;Soil Mositure Sensor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;some wires and resistors for the voltage divider&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;2-build&#34;&gt;2.Build&lt;/h2&gt;

&lt;p&gt;Wire up the components like shown in the following picture. Please make sure to use a voltage divider because the ESP8266&amp;rsquo;s analog in has a range from 0 V - 1 V, but the sensor ranges from 0 V - 3.3 V
&lt;img src=&#34;https://cloud.githubusercontent.com/assets/16187615/21501819/8409f220-cc4b-11e6-86f8-37d96be0e6bd.png&#34; alt=&#34;sketch&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;3-program&#34;&gt;3.Program&lt;/h2&gt;

&lt;p&gt;The prototype code can be found on &lt;a href=&#34;https://github.com/eightBEC/esp8266moisture&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been using IBM&amp;rsquo;s IoT Platform to send my data to, but you can use every IoT platform you like to use.
Before uploading the code, adjust the config0.lua file which contains all properties for WIFI and IoT connectivity.
Make sure to upload all .lua files to your device using a tool like LuaLoader.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;4-next-steps&#34;&gt;4.Next Steps&lt;/h2&gt;

&lt;p&gt;In the future I&amp;rsquo;ll add a solar panel, a lithium-ion battery pack and a MOSFET to disconnect the sensor while deep sleep.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ESP8266 on White Aliexpress Break-Out Board</title>
      <link>https://eightbec.github.io/blog/posts/newest/</link>
      <pubDate>Tue, 20 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://eightbec.github.io/blog/posts/newest/</guid>
      <description>&lt;p&gt;Recently I&amp;rsquo;ve bought a couple of those super cheap &lt;a href=&#34;https://de.aliexpress.com/item/5PCS-Esp8266-WiFi-series-of-model-ESP-12-ESP-12F-esp12F-esp12-authenticity-guaranteed/32655304335.html?spm=2114.010208.3.144.EIgPmS&amp;amp;ws_ab_test=searchweb0_0,searchweb201602_2_10065_10068_10084_10083_10080_10082_10081_10060_10061_10062_10056_10055_10054_10059_10099_10078_10079_427_10073_10103_10102_10101_10096_10052_10050_10051,searchweb201603_3&amp;amp;btsid=0101278f-2176-44d3-bb51-a69a912e2603&#34;&gt;ESP8266-12E devices&lt;/a&gt; and the proper white &lt;a href=&#34;https://de.aliexpress.com/item/10Pcs-Set-ESP8266-WiFi-Modules-Breakout-Transfer-Board-Adapter-Plate-For-ESP-07-ESP-08-ESP/32655534675.html?spm=2114.010208.3.21.f1wPGl&amp;amp;ws_ab_test=searchweb0_0,searchweb201602_2_10065_10068_10084_10083_10080_10082_10081_10060_10061_10062_10056_10055_10054_10059_10099_10078_10079_427_10073_10103_10102_10101_10096_10052_10050_10051,searchweb201603_3&amp;amp;btsid=ff36fcdd-d486-4eb6-91cb-df975902bc09&#34;&gt;break-out boards&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/16187615/21349579/f2de4802-c6b2-11e6-9f6e-af6353defbbe.jpg&#34; alt=&#34;break-out board&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After soldering the ESP8266 on top of the break-board I ran a few tests and tried to get this little IoT device up and running, but I wasn&amp;rsquo;t able to do so.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/16187615/21349578/f2da85b4-c6b2-11e6-8312-b404b2b03eda.jpg&#34; alt=&#34;esp8266&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It took me quite a while to figure out that the VCC pin of the break-board wasn&amp;rsquo;t connected to the VCC pin going to the ESP8266 board. Becuase of the lack of documentation there was no clue that either one has to add a voltage divider or a jumper. Doing the latter fixed the issue and I was able to get the ESP8266 running.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/16187615/21349577/f2d8c738-c6b2-11e6-9fe3-5d55f6c9ea98.jpg&#34; alt=&#34;break-out fix&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To flash the ESP8266-12E connect GND, VCC, RXD, TXD and make sure GPIO0 and GPIO15 are tied to ground.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>